2015-12-28---------------------------------------------------------------------
每次push到远程仓库时，都要输入账号和密码。这是因为使用了https的方式clone的，所以可以换成SSH，可以使用命令：
git remote rm origin
git remote add origin [SSH 路径]

2015-12-26---------------------------------------------------------------------
查看远程仓库信息
git remote --verbose(or -v)

添加远程仓库
git remote add [shortname] [url]

从远程仓库抓取数据
git fetch [remote-name]

git fetch origin 会抓取从你上次克隆以来别人上传到此远程仓库中的所有更新

git pull和git fetch的区别：
fetch 命令只是将远端的数据拉到本地仓库，并不自动合并到当前工作分支，只有当你确实准备好了，才能手工合并。

pull 命令自动抓取数据下来，然后将远端分支自动合并到本地仓库中当前分支。

git remote show [remote-name] 查看某个远程仓库的详细信息，比如要看所克隆的origin仓库，可以运行：git remote show origin

git remote rename [old name] [new name] 修改某个远程仓库在本地的简称

git remote rm [remote-name] 移除对应的远程仓库

当merge后，可能会有冲突，当调用git add，表明解决了冲突。

git checkout -b [分支名] [远程名]/[分支名] 基于远程仓库中的那个分支，新建个本地分支。这样可以在上面编辑了。

删除远程分支 git push [远程名] :[分支名]
有种方便记忆这条命令的方法：记住我们不久前见过的 git push [远程名] [本地分支]:[远程分支] 语法，如果省略 [本地分支]，那就等于是在说“在这里提取空白然后把它变成[远程分支]”


使用emacs作为git的编辑器
git config --global core.editor emacs

恢复默认的git编辑器
git config --global --unset-all core.editor