2017-12-23 22:06-------------------------------------------------------------
今天晚上从8点多开始想折腾一个问题：在mac的emacs中使用evil-mode，同时离开它的insert-state时，把中文输入法自动切换回英文。

于是我开始了上网搜帖子的工作。最终解决了问题。现把解决思路总结如下：
安装swim命令，安装方式如下：
git clone -b 0.2.0 https://github.com/mitsuse/swim.git && cd swim
swift build -c release
cp .build/release/swim ${YOUR_EXECUTABLE_PATH}
参考帖子：https://emacs-china.org/t/topic/4337

然后在init.el中添加脚本如下：

;;输入法
(setq input-switch-method0 "com.apple.keyboardlayout.all")
(add-hook 'evil-insert-state-exit-hook
	  (lambda ()
	    (shell-command "swim use com.apple.keyboardlayout.all")))

然后验证时，发现有问题，报错：/bin/bash: swim: command not found

于是elpy中寻找安装package:exec-path-from-shell
然后在init.el中添加如下脚本：
(exec-path-from-shell-initialize)
问题解决。
最后感谢如下帖子的帮助：
https://www.gnu.org/software/emacs/manual/html_node/emacs/Select-Input-Method.html
https://emacs-china.org/t/topic/4337
https://gist.github.com/celadevra/7ae45920e2494fbc38ef
https://github.com/mitsuse/swim/tree/master/Sources
https://emacs.stackexchange.com/questions/17249/how-to-make-terminal-shell-spawned-inside-emacs-running-on-a-mac-inherit-the-env
https://github.com/purcell/exec-path-from-shell
https://github.com/syl20bnr/spacemacs/issues/3225
https://stackoverflow.com/questions/4393628/emacs-shell-command-not-found



2016-05-02 18:37---------------------------------------------------------------
(os x 10.10.5 emacs24.5.1)
今天我尝试着把emacs配置成python ide。首先想到的是要有auto-complete。
于是，通过网上的资料，在init.el中配置如下：
;; setting Python
(elpy-enable)
(global-auto-complete-mode t)
;;(setq elpy-rpc-backend "jedi")
(add-hook 'python-mode-hook 'jedi:setup)
(setq jedi:complete-on-dot t)
;;(setq elpy-rpc-python-command "python2")

但是auto-complete居然不起效，于是发现，需要安装python server(jediepcserver.py)。需要执行
M-x jedi:install-server。
但是，发现报错：
Program named "virtualenv" does not exist
在网上找资料，于是通过在shell中执行sudo pip install virtualenv，来安装它。
然后，就解决了该问题。

python的auto-complete可以奇效了。
现把参考资料列出来如下：
http://blog.csdn.net/mikelearnscode/article/details/23022277
http://tkf.github.io/emacs-jedi/latest/
https://github.com/tkf/emacs-jedi/issues/158
https://virtualenv.pypa.io/en/latest/


2016-01-23 11:50---------------------------------------------------------------
(os x 10.10.5 emacs24.5.1)
今天我在elpa上找到了move-text包，用它来上下移动一行。并且在init.el上配置：
;;; move current line up or down
(add-to-list 'load-path (expand-file-name "~/.emacs.d/elpa/move-text-20140307.844/"))
(require 'move-text)
(move-text-default-bindings)

但是不舒服的是：
它使用M-up和M-down上下移动当前行。而我已经把M-up和M-down用在了别的用途上（屏幕一行一行滚动光标不动）。
所以我想更改键的绑定。于是这么做
(global-set-key [(meta shift up)] 'move-text-up)
(global-set-key [(meta shift down)] 'move-text-down)
并且注释掉(必须注释掉):
(move-text-default-bindings)

但是我发现此时那个功能不能用了（屏幕一行一行滚动光标不动）,快捷键不能用了；
最后经过调试，发现需要把那个功能相关的代码移动到后边来，移动到move-text配置的后边来。这样子就好使了。




2016-01-14---------------------------------------------------------------------
这个网站上有一系列的emacs的快捷键介绍，还是很强大的
http://seamons.com/projects/emacs/

2016-01-04----------------------------------------------------------------------
（ubuntu 14.04 LTS emacs24.3.1）
终于弄明白了自己使用Tags.java来生成的.java_base.tag太小的原因了。
因为我的classpath是这样配置的：
export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar
我再加上jre中的rt.jar就可以了，classpath配置成如下。
export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JAVA_HOME/jre/lib/rt.jar

2015-12-29----------------------------------------------------------------------
（ubuntu 14.04 LTS emacs24.3.1）
今天配置了emacs的java环境。
首先是需要有个auto-complete和yasnippet包，这个我是有了。
然后下载https://github.com/emacs-java/auto-java-complete/，把它放到.emacs.d文件夹中；
再配置上
(add-to-list 'load-path "~/.emacs.d/ajc-java-complete/")
(require 'ajc-java-complete-config)
(add-hook 'java-mode-hook 'ajc-java-complete-mode)
(add-hook 'find-file-hook 'ajc-4-jsp-find-file-hook)


还有一步，可重要，也可坑了。
编译Tags.java文件，并且运行它。结果生成的.java_base.tag太小，不能使用。它提示说classpath没有配置好。但是我查看了一下没有发现classpath配置存在的问题。
于是我解压缩了java_base.tag.bz2，使用这个。


当我编写了一段java程序后，发现不能运行，它提示jde没有找到jdk。
于是使用M-x customize-variable[RET]jde-jdk-registry[RET]来配置jdk。

今天在package-list-packages上搜到了solarized主体，然后下载之，再配置上。感觉还可以。
(add-to-list 'custom-theme-load-path "~/.emacs.d/elpa/solarized-theme-20151211.535")
(load-theme 'solarized-dark t)




2015-12-29---------------------------------------------------------------------
(ubuntu 14.04 LTS emacs24.3.1)
工作中经常使用shell，感觉敲入M-x shell，C-x b *shell*，太慢。所以定义了一个快捷键
(global-set-key (kbd "C-x S") 'shell)


2015-12-28 10:44---------------------------------------------------------------
(ubuntu 14.04 LTS emacs24.3.1)
可以使用C-z来回到终端中，然后在终端中输入%emacs，在回到emacs中

使用alias emacs='emacs -nw'命令，可以在终端中打开emacs,通过使用命令"emacs"，代替"emacs -nw"。但是要设置永久别名，需要保存到.bashrc中

使用M-x revert-buffer，可以重新加载文件，起到刷新buffer的作用。



2015-12-26 14:56----------------------------------------------------------------
(os x 10.10.5 emacs24.5.1)
emacs中的shell中，使用git diff命令，提示，WARNING: terminal is not fully functional
此时，只需要在terminal中执行 git config --global core.pager ""
即可。进而解决乱码的问题。

2015-12-26 07:50----------------------------------------------------------------
(os x 10.10.5 emacs24.5.1)
(tool-bar-mode -1) ;隐藏emacs的工具栏


2015-12-25 --------------------------------------------------------------------
(ubuntu 14.04 LTS emacs24)
本来想安装xclip，让emacs可以粘贴来自于外部的内容。但是失败了，提提示如下：
File error: Searching for program, xclip, no such file
附上我的配置：
;; config xclip
(add-to-list 'load-path "/home/sunhang/.emacs.d/elpa/xclip-1.3/")
(require 'xclip)
(xclip-mode 1)

在网上搜到一个配置是：
(setq x-select-enable-clipboard t)
但是又不知道如何使用它。好郁闷！

当我用terminal打开emacs时，发现颜色不对。于是在.bashrc中加入
export TERM=xterm-256color
然后重启terminal，输入tput colors，会发现此时输出256，说明配置成功。


2015-12-23 22:34----------------------------------------------------------------
(os x 10.10.5 emacs24.5.1)
今天发现cedet在emacs24中是build-in的了。然后我使用命令打开semantic.
;; turn on Semantic
(semantic-mode 1)
;; let's defin a function which adds semantic as a suggestion backend to auto complete
;; and hook this function to c-mode-common-hook
(defun my:add-semantic-to-autocomplete()
  (add-to-list 'ac-sources 'ac-source-semantic)
  )
(add-hook 'c-mode-common-hook 'my:add-semantic-to-autocomplete)
;; turn on ede mode
(global-ede-mode 1)
;; create a project for our program
(ede-cpp-root-project "my project" :file "~/my/my-cpp/my_program/src/main.cpp"
		      :include-path '("/../my_inc"))
;; you can use system-include-path for setting up the system header file locations.
;; turn on automatic reparsing of open buffers in semantic
(global-semantic-idle-scheduler-mode 1)

这样，我就可以使用尖括号<>的include来包含my_inc文件夹中的头文件了。


2015-12-22 23:00----------------------------------------------------------------
(os x 10.10.5 emacs24.5.1)
安装flymake-cursor就很简单了。输入命令M-x package-list-packages，然后找到flymake-cursor，并安装它既可。

紧接着我要安装google-c-style了。首先在elpa库中下载google-c-style，然后在.emacs文件中添加：
;; start google-c-style with emacs
(require 'google-c-style)
(add-hook 'c-mode-common-hook 'google-set-c-style)
(add-hook 'c-mode-common-hook 'google-make-newline-indent)

轻松搞定！今晚可以睡个好觉了！



2015-12-21 22:43---------------------------------------------------------------------

(os x 10.10.5 emacs24.5.1)

在软件包库中搜索flymake-google-cpplint,并且下载安装它。然后在.emacs中输入

复制代码
(defun my:flymake-google-init ()
  (require 'flymake-google-cpplint)
  (flymake-google-cpplint-load)
  )
(add-hook 'c-mode-hook 'my:flymake-google-init)
(add-hook 'c++-mode-hook 'my:flymake-google-init)
复制代码
然后在终端中输入pip search cpplint，终端提示pip:command not found。所以需要安装pip，安装pip的方式是，我用wget命令获取get-pip.py，

wget https://bootstrap.pypa.io/get-pip.py
然后使用如下命令来安装pip

sudo python get-pip.py
然后，敲入命令sudo pip search cpplint，此时terminal会显示对cpplint的介绍。

然后，敲入命令sudo pip install cpplint，进行安装cpplint

But...特么的cpplint安装到哪里了，机器也不告诉我！！！

突然想起了which命令，终于找到cpplint的安装路径了，于是在.emacs中函数my:flymake-google-init中添加语句

  (custom-set-variables

   '(flymake-google-cpplint-command "/usr/local/bin/cpplint"))

 

 

2015-12-16 23:55-----------------------------------------------------------------------

(os x 10.10.5 emacs24.5.1)

不甘心，决定再尝试一下emacs的c/c++配置。于是，在事先下载好了yasnippet和autocomplete时，在.emacs中添加函数

(defun my:ac-c-header-init ()
  (require 'auto-complete-c-headers)
  (add-to-list 'ac-sources 'ac-source-c-headers)
  (add-to-list 'achead:include-directories '" /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include"))
其中类库的地址是通过如下命令得到

gcc -xc++ -E -v -
然后还需要加入hook

(add-hook 'c++-mode-hook 'my:ac-c-header-init)
(add-hook 'c-mode-hook 'my:ac-c-header-init)
于是，我打开c文件，输入include和表达式，它果然可以显灵了。

 

然后，我又再elpa中加载了iedit，在.emacs中添加

;; fix iedit bug in Mac
(define-key global-map (kbd "C-c ;") 'iedit-mode)
之后，我就可以在c文件中，把光标移动到一个变量上时，输入命令C-c ;，编辑窗口会高亮显示在所有地方的该变量。再输入C-c ;取消高亮。

 

 

2015-12-15 21:48-----------------------------------------------------------------------

(os x 10.10.5 emacs24.5.1)

每次修改.emacs文件后，要重启emacs才能使它生效。现在找到一个好方法。

You can use the command load-file (M-x load-file, then press return twice to accept the default filename, which is the current file being edited).

You can also just move the point to the end of any sexp and press C-x C-e to execute just that sexp. Usually it's not necessary to reload the whole file if you're just changing a line or two.

 

2015-12-12 11:51------------------------------------------------------------------------

(os x 10.10.5 emacs24.5.1)

在.emacs中添加语句

(setq jde-help-remote-file-exists-function '("beanshell"))
确实解决了找不到wget的问题，然后emacs提示“Package sregex is obsolete!”。

特么的我是不是要单独写个日记来记录怎么配置jdee呀，看来碰到的问题太特么多了，又特么不知道提示的是什么意思?

 

2015-12-12 11:22-------------------------------------------------------------------------

(os x 10.10.5 emacs24.5.1)

fuck!当我把jdee放到~/.emacs.d/中后，在.emacs中添加了以下语句

;; jdee

(add-to-list 'load-path "~/.emacs.d/jdee-2.4.1/lisp")

(load "jde")

但是，启动emacs时，提示

error: Cannot find wget. You might want to use the beanshell resolver instead.

然后我用brew install wget命令，安装wget成功（控制台显示：/usr/local/Cellar/wget/1.16.3: 9 files, 1.5M）。

但是重启emacs后，依然提示cannot find wget。

 

2015-12-12 10:49--------------------------------------------------------------------------

当配置java环境时，emacs被搞坏了。从mac上删除掉emacs，重装emacs-24.5-1，此时我的心情你懂得。。。

 

2015-12-11 --------------------------------------------------------------------------------

今天我去往emacs24中添加cedet，但是查看emacswiki时，上面解释说：In Emacs 23.2, CEDET was merged into the main Emacs distribution

而且上面给出提示：TODO: please explain what code you need to load the most useful IDE tools provided by CEDET

于是我在.emacs中添加了基础配置：

(global-ede-mode 1)
(require 'semantic/sb)
(semantic-mode 1)

 

2015-12-11之前-------------------------------------------------------------------------

*scratch*是草稿缓冲区，你可以在其中乱写东西，但不会被保存

;; ----------------------------- 
;; 屏幕一行一行滚动光标不动 

(global-set-key [(meta down)] (lambda (&optional n) (interactive "p") 
(scroll-up (or n 1))))

(global-set-key [(meta up)] (lambda (&optional n) (interactive "p") 
(scroll-down (or n 1))))
